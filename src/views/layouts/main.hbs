<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Bitacora Ag. Celery</title>
  {{!----Bootstrap---}}
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
    integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A=="
    crossorigin="anonymous" referrerpolicy="no-referrer" />
  <style>
    .selectestatus>option {
      font-size: 15px;
    }

    .selectestatus {
      font-size: 15px;
      letter-spacing: 4px;
    }
  </style>


</head>

<body style="background-image: linear-gradient(to bottom, #011739, #061835, #0b1931, #0f192d, #131a29, #131d2b, #14212d, #16242e, #132c35, #113339, #133b3b, #1a423b);
background-positions: center;
background-size: cover;
background-attachment:fixed;
background-repeat:no-repeat;
">
  {{>navigation}}
  {{{body}}}

  {{!----Script de Bootstrap---}}
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
    integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"
    integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy"
    crossorigin="anonymous"></script>

  {{!----para llamar los datos ---}}

  <script>
    fetch('/estado')
      .then(response => response.json())
      .then(estadoOptions => {
        const estadoSelect = document.getElementById('estado');
        estadoOptions.estados.forEach(option => {
          const optionElement = document.createElement('option');
          optionElement.value = option;
          optionElement.textContent = option;
          estadoSelect.appendChild(optionElement);
        });
      });
  </script>

  {{!----Funcion filtrar por opciones ---}}

  <script>
    async function filtroEstado() {
      const estado = document.getElementById('filtroEstado').value || '';

      try {
        const response = await fetch('http://localhost:3000/list/filter', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ estado: estado })
        });

        if (!response.ok) {
          throw new Error('Network response was not ok');
        }

        const data = await response.json();
        const tablaRegistros = document.getElementById('tablaRegistros');

        if (data.registros && data.registros.length > 0) {
          let tableHTML = `
                <table class="table text-center table table-dark table-striped-columns table table-hover table-striped table-bordered Regular shadow">
                    <thead>
                        <tr class="table-dark border-primary">
                            <th scope="col" class="col-2">Fecha</th>
                            <th scope="col">Cliente</th>
                            <th scope="col" class="col-2">Solicitante</th>
                            <th scope="col">Descripcion</th>
                            <th scope="col">Estado</th>
                            <th scope="col">Responsable</th>
                            <th scope="col">Observaciones</th>
                            <th scope="col">Acciones</th>
                        </tr>
                    </thead>
                    <tbody>`;

          data.registros.forEach(registro => {
            tableHTML += `
                    <tr class="font-size: 12px;">
                        <td>${registro.fechaFormateada}</td>
                        <td>${registro.cliente}</td>
                        <td>${registro.solicitante}</td>
                        <td>${registro.descripcion}</td>
                        <td>${registro.estado}</td>
                        <td>${registro.responsable}</td>
                        <td>${registro.observaciones}</td>
                        <td>
                            <div class="btn-group">
                                <a href="/edit/${registro.id}" class="btn btn-warning"><i class="fa-regular fa-pen-to-square p-2"></i></a>
                                <a onclick="seleccionarId(${registro.id})" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#exampleModal"><i class="fa-regular fa-trash-can p-2"></i></a>
                            </div>

                            
                        </td>
                    </tr>`;
          });

          tableHTML += `
                    </tbody>
                    <tfoot>
                        <tr class="table-dark">
                            <td colspan="12">Registro de actividades</td>
                        </tr>
                    </tfoot>
                </table>`;
          tablaRegistros.innerHTML = tableHTML;
        } else {
          tablaRegistros.innerHTML = `
                <div class="card text-center mx-auto" style="width:350px;">
                    <div class="card-header">
                        <h3>Registro de actividades</h3>
                    </div>
                    <div class="card-body">
                        <p>No hay registros disponibles para el estado seleccionado.</p>
                        <a href="/add" class="btn btn-primary">Crear registro</a>
                    </div>
                </div>`;
        }
      } catch (error) {
        console.error('Error al obtener los registros:', error);
        document.getElementById('tablaRegistros').innerHTML = `
            <div class="alert alert-danger" role="alert">
                Error al obtener los registros. Por favor, inténtalo de nuevo más tarde.
            </div>`;
      }
    }

    // Llama a filtroEstado() al cargar la página para obtener todos los registros por defecto
    document.addEventListener('DOMContentLoaded', filtroEstado);
  </script>

  <script>
    function seleccionarId(id){
      localStorage.setItem("deleteId",id);
    }

    async function deleteRegister(){
      const id=localStorage.getItem("deleteId"); 
    
      try{
      
        const response = await fetch('http://localhost:3000/delete/'+id, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        });

        if (!response.ok) {
          throw new Error('Network response was not ok');
        }

        const data = await response.json();
         
        if(data.delete){
          
          await filtroEstado()          
          
        }
      }
      catch(error){
        alert(error)
      }

    }


  </script>


  


</body>

</html>